# Nombre del workflow
name: Staging Workflow

# Cu√°ndo se ejecuta el workflow
on:
  push:
    branches: [ main ]
    paths:
      - backend/

# Trabajos
jobs:
  # Cada uno de los jobs
  webinar-formatting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: psf/black@stable

  webinar-testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2016]
        python-version: ['pypy-3.7', 'pypy-3.8', '3.x']
    steps:
    - uses: actions/checkout@v2
    - name: Usando Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - run: pip install -r requirements.txt
    - run: pytest

  webinar-build:
    needs: [webinar-testing, webinar-formatting]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Usando Python 3.10.2
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.2
    - name: Build Project
      run: |
        zip -r lambda_code.zip . -x .git -x .pytest_cache/* -x __pycache__/*
    - uses: actions/upload-artifact@v2
      with:
        name: webinar-lambda-code
        path: lambda_code.zip

  webinar-deploy:
    needs: [webinar-build]
    runs-on: ubuntu-latest
    steps:
    - name: Set AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - uses: actions/download-artifact@v2
      with:
        name: webinar-lambda-code
        path: lambda_code.zip
    - name: Deploy to AWS Lambda
      run: |
        aws lambda update-function-code --function-name webinar-template-function --zip-file fileb://lambda_code.zip
